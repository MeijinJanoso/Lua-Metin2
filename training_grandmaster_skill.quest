
-- # --------------------------------------------- #
-- #  Questfile from Metin2SF by Ethoard  #
-- # --------------------------------------------- #

quest training_grandmaster_skill begin
	state start begin
		when 50513.use begin
			say_title("Zaawansowane Szkolenie Umiejêtnoœci")
			if pc.get_skill_group() == 0 then
				say_title("Zaawansowane Szkolenie Umiejêtnoœci")
				say("Nie wybra³eœ jeszcze drogi duchowej."..pc.get_skill_group())
				return
			end
			if get_time() < pc.getqf("next_time") then -- and not is_test_server() then
				if pc.is_skill_book_no_delay() then
					say("Trening spowoduje usuniêcie efektu")
					say("Zwoju Egzorcyzmu.")
					wait()
					say_title("Zaawansowane Szkolenie Umiejêtnoœci")
				else
					say("Musisz u¿yæ Zwoju Egzorcyzmu zanim ponownie")
					say("rozpoczniesz trening przed up³ywem 24 godzin.")
					return
				end
			end
			local result = training_grandmaster_skill.BuildGrandMasterSkillList(pc.get_job(), pc.get_skill_group())
			local vnum_list = result[1]
			local name_list = result[2]
			if table.getn(vnum_list) == 0 then
				say("Nie mo¿esz trenowaæ ¿adnej umiejêtnoœci.")
				return
			end
			say("Proszê wybraæ umiejêtnoœæ, któr¹ chcesz trenowaæ.")
			say("")
			local menu_list = {}
			table.foreach(name_list, function(i, name) table.insert(menu_list, name) end)
			table.insert(menu_list, "Anuluj") 
			local s=select_table(menu_list)
			if table.getn(menu_list) == s then
				return
			end
			local skill_name=name_list[s]
			local skill_vnum=vnum_list[s]
			local skill_level = pc.get_skill_level(skill_vnum)
			local cur_alignment = pc.get_real_alignment()
			local need_alignment = 1000+500*(skill_level-30)
			test_chat("²{¦bµ½´c­È: "..cur_alignment)
			test_chat("»Ý­nµ½´c­È: "..need_alignment)
			local title=string.format("Trening %s Wielki Mistrz", skill_name)
			say_title(title)
			say("Jeœli bêdziesz u¿ywaæ swoich punktów rangi")
			say("podczas treningu Umiejêtnoœci, mo¿e siê zdarzyæ,")
			say("¿e twoja Ranga stanie siê negatywna.")
			if cur_alignment<-19000+need_alignment then
				say_reward("Nie masz wystarczaj¹cej iloœci punktów Rangi.")
				return
			end
			if cur_alignment<0 then
				say_reward(string.format("Wymagane punkty rangi: %d -> %d", need_alignment, need_alignment*2))
				say_reward("Jeœli trening zakoñczy siê powodzeniem,")
				say_reward("zu¿yjesz 2 razy wiêcej punktów Rangi.")
				need_alignment=need_alignment*2
			elseif cur_alignment<need_alignment then
				say_reward(string.format("Wymagane punkty rangi: %d", need_alignment))
				say_reward("Jeœli bêdziesz teraz trenowaæ, twoja ranga")
				say_reward("stanie siê negatywna.")
			else
				say_reward(string.format("Wymagane punkty rangi: %d", need_alignment))
			end
			say("")
			local s=select("Dalej", "Anuluj")   
			if s==2 then
				return
			end
			if cur_alignment>=0 and cur_alignment<need_alignment then
				say_title(title)
				say_reward("Kontynuuj")
				say("Jeœli bêdziesz kontynuowa³ trening umiejêtnoœci,")
				say("mo¿liwe jest, ¿e twoje punkty rangi przyjm¹ ")
				say("wartoœæ ujemn¹ i bêdziesz mia³ negatywn¹ Rangê.")
				say("Jeœli chcesz kontynuowaæ, wpisz poni¿ej s³owo")
				say("")
				say_reward("Trenuj")
				say("Je¿eli nie chcesz ju¿ trenowaæ, wciœnij 'ENTER'.")
				local s=input()
				if s!="Trenuj" then
					return
				end
			end
			if get_time() < pc.getqf("next_time") then -- and not is_test_server() then
				if pc.is_skill_book_no_delay() then
					pc.remove_skill_book_no_delay()
				else
					say("[°ª¯Åµ¥¯Å]§Þ¯à­×½m¿ù»~: ¥ð®§¤¤")
					return
				end
			end
			pc.setqf("next_time", get_time()+time_hour_to_sec(number(8, 12)))
			if need_alignment>0 then
				if pc.learn_grand_master_skill(skill_vnum) then
					pc.change_alignment(-need_alignment)
					say_title(title)
					if 40 == pc.get_skill_level(skill_vnum) then
					say_reward("Powodzenie!")
					say("Gratulacje! Uda³o siê!")
					say(string.format("%s jest teraz na poziomie Wielki Mistrz.", skill_name))
					say("To oznacza, ¿e osi¹gn¹³eœ poziom Perfekcyjny tej")
					say("umiejêtnoœci. Dalsze jej szkolenie jest")
					say("niemo¿liwe.")
					else
					say_reward("Powodzenie!")
					say("Gratulacje! Uda³o siê!")
					say(string.format("%s jest teraz na poziomie Wielki Mistrz.", skill_name))
					end
					say_reward("Pomyœlnie podnis³eœ poziom!")
					say_reward(string.format("Zu¿y³eœ %d punktów rangi.", need_alignment))
					say("")
				else
					say_title(title)
					say_reward("Niepowodzenie!")
					say("Nie uda³o siê ulepszyæ umiejêtnoœci.")
					say_reward("Straci³eœ trochê punktów rangi.")
					say("")
					pc.change_alignment(-number(need_alignment/3, need_alignment/2))
				end
			end
			item.remove()
		end
		function BuildGrandMasterSkillList(job, group)
			GRAND_MASTER_SKILL_LEVEL = 30
			PERFECT_MASTER_SKILL_LEVEL = 40
			local skill_list = special.active_skill_list[job+1][group]
			local ret_vnum_list = {}
			local ret_name_list = {}
			table.foreach(skill_list, 
			function(i, skill_vnum) 
				local skill_level = pc.get_skill_level(skill_vnum)
				if skill_level >= GRAND_MASTER_SKILL_LEVEL and skill_level < PERFECT_MASTER_SKILL_LEVEL then
					table.insert(ret_vnum_list, skill_vnum)
					local name=locale.GM_SKILL_NAME_DICT[skill_vnum]
					if name == nil then name=skill_vnum end
					table.insert(ret_name_list, name)
				end
			end)
			return {ret_vnum_list, ret_name_list}
		end
	end
end
